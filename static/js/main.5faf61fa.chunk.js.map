{"version":3,"sources":["components/Todo.js","components/TodoListView.js","App.js","reportWebVitals.js","components/Update.js","index.js"],"names":["TodoItem","props","deleteTodoHandler","nanoid","a","axios","delete","then","res","console","log","data","useState","open","setOpen","align","style","className","todo","title","Button","onClick","variant","borderRadius","href","Collapse","in","id","description","addedDT","updatedDT","TodoView","todoList","map","Todo","App","setTodoList","setTitle","desc","setDesc","useEffect","get","Form","Group","controlId","Label","Control","required","type","onChange","event","target","value","Feedback","Text","as","rows","post","Date","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Update","setTodo","nid","useParams","fetchdata","updateTodoHandler","put","defaultValue","disabled","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.5faf61fa.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport {Button, Collapse} from \"react-bootstrap\";\r\nimport {FaTrash, FaEye} from \"react-icons/fa\";\r\n\r\nfunction TodoItem(props) {\r\n    const deleteTodoHandler = async (nanoid) => {\r\n    await axios.delete(`https://crud-rk.herokuapp.com/api/delete-todo/${nanoid}`).then(res => console.log(res.data))\r\n    };\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <div align={'right'} style={{'font-family':'Segoe UI'}}>\r\n                <span className={'float-start text-break'}\r\n                      style={{'padding-top':'7px','font-family': 'lato', 'font-size':'17px'}}>\r\n                    <>{props.todo.title}</>\r\n                </span>\r\n            <Button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        className=\"mx-2\" variant={'outline-info'} style={{borderRadius:'100px'}}\r\n      >\r\n        <FaEye style={{'padding-bottom':'3px'}}/>\r\n      </Button>\r\n                <Button onClick={() => deleteTodoHandler(props.todo.nanoid)} className=\"\"\r\n                        variant={'outline-danger'} style={{borderRadius:'100px'}} >\r\n                    <FaTrash style={{'padding-bottom':'3px'}}/></Button>\r\n            <Button href={`/${props.todo.nanoid}`}\r\n                        variant={'outline-danger'} style={{borderRadius:'100px'}} >\r\n                    <FaTrash style={{'padding-bottom':'3px'}}/>U</Button>\r\n\r\n      <Collapse in={open}>\r\n\r\n        <div id=\"example-collapse-text\" className=\"card-body \" style={{'word-wrap':'break-word'}} align={'left'}>\r\n            <span style={{'font-family': 'lato', 'font-size':'16px'}}>Description :</span><br/>\r\n            {props.todo.description}\r\n            <br/>\r\n            <span style={{'font-family': 'lato','font-size':'16px'}}>Added on :</span><br/>{props.todo.addedDT}\r\n            <br/>\r\n            <span style={{'font-family': 'lato','font-size':'16px'}}>Last updated on :</span><br/>{props.todo.updatedDT}\r\n\r\n\r\n        </div>\r\n\r\n      </Collapse>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import TodoItem from \"./Todo\";\r\n\r\nexport default function TodoView(props) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.todoList.map(todo => <TodoItem todo={todo} />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport TodoView from \"./components/TodoListView\";\nimport {nanoid} from \"nanoid\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {FaPlus} from \"react-icons/fa\";\n\nfunction App() {\n\n    const [todoList, setTodoList] = useState([{}])\n    const [title, setTitle] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n\n\n    useEffect(() => {\n        axios.get(`https://crud-rk.herokuapp.com/api/get-todo`)\n            .then(res => {\n                setTodoList(res.data)\n            })\n    });\n\n    const addTodoHandler = () => {\n      axios.post(`https://crud-rk.herokuapp.com/api/add-todo/`,\n          {'nanoid': nanoid(), 'title': title, 'description': desc, 'addedDT': Date(), 'updatedDT': Date()})\n          .then(res => console.log(res))\n    };\n\n  return (\n        <div id=\"main\" className=\"App  justify-content-center align-content-center mx-auto my-auto\" style={{\"width\": \"480px\", \"backgroundColor\":\"white\", \"margintop\": \"15px\"}}>\n\n            <div className=\"card-body list-group-item\">\n                <h5 className=\"card text-white bg-dark mb-4\" style={{'font-family': 'Palatino Linotype', 'font-weight': 'bold'}}>\n                    Add Your Task\n                </h5>\n                <Form align={'left'}>\n                    <Form.Group className={\"mb-3\"} controlId={'title'} >\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control required type={'text'} onChange={event => setTitle(event.target.value)}/>\n                        <Form.Control.Feedback type={'invalid'} >Title can not be empty</Form.Control.Feedback>\n                        <Form.Text className={'mb-1 text-muted'} style={{'font-family': 'Garamond'}}>*Title can not be empty</Form.Text><br/>\n                    </Form.Group >\n                    <Form.Group className={\"mb-4\"} controlId={'desc'}>\n                    <Form.Label>Description</Form.Label>\n                        <Form.Control as={'textarea'} rows={4} onChange={event => setDesc(event.target.value)}/>\n                        </Form.Group>\n\n                </Form>\n                    <Button className={\" mx-2 mb-5\"} variant={'success'} style={{borderRadius: '50px',}} onClick={addTodoHandler}>\n                        Add <FaPlus style={{'padding-bottom':'3.5px'}}/>\n                    </Button>\n                <h5 className={\"card text-white bg-dark mb-3\"} style={{'font-family': 'Palatino Linotype', 'font-weight': 'bold'}}>Your Tasks</h5>\n                <div className={'justify-content-start align-content-start'}>\n                    <TodoView todoList = {todoList} />\n                </div>\n            </div>\n\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../App.css';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {FaPlus} from \"react-icons/fa\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {nanoid} from \"nanoid\";\r\n\r\nfunction Update() {\r\n\r\n    const [todo, setTodo] = useState({})\r\n    let nid = useParams().nanoid;\r\n    const fetchdata = async () => {\r\n        const res = await axios.get(`https://crud-rk.herokuapp.com/api/get-todo/${nid}`);\r\n        setTodo(res.data);\r\n    };\r\n    useEffect(() => {\r\n        fetchdata();\r\n    }, [])\r\n\r\n    let [title, setTitle] = useState(\"ojef-=-39uaenflenfaw?:{/\")\r\n    let [desc, setDesc] = useState(\"q309pjdAA()&#:woau!@\")\r\n    let a = \"ojef-=-39uaenflenfaw?:{/\";\r\n    let b = \"q309pjdAA()&#:woau!@\";\r\n    const updateTodoHandler = async (id) => {\r\n        if (title === \"ojef-=-39uaenflenfaw?:{/\") {\r\n            title = todo.title\r\n        }\r\n        if (desc === \"q309pjdAA()&#:woau!@\") {\r\n            desc = todo.description\r\n        }\r\n\r\n\r\n        await axios.put(`https://crud-rk.herokuapp.com/api/update-todo/${id}`,\r\n\r\n            {\r\n                'nanoid': nanoid(), 'title': title, 'description': desc, 'updatedDT': Date()\r\n            })\r\n            .then(res => console.log(res.data))\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"main\" className=\"App  justify-content-center align-content-center mx-auto my-auto\"\r\n             style={{\"width\": \"480px\", \"backgroundColor\": \"white\", \"margintop\": \"15px\"}}>\r\n            <div className=\"card-body list-group-item\">\r\n                <h5 className=\"card text-white bg-dark mb-4\"\r\n                    style={{'font-family': 'Palatino Linotype', 'font-weight': 'bold'}}>\r\n                    Update Your Task\r\n                </h5>\r\n                <Form >\r\n                     <Form.Group className={\"mb-3\"} controlId={'title'} align={'left'}>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control required type={'text'} onChange={event => setTitle(event.target.value)}\r\n                                      defaultValue={todo.title}\r\n                        />\r\n                        <Form.Control.Feedback type={'invalid'}>Title can not be empty</Form.Control.Feedback>\r\n                        <Form.Text className={'mb-1 text-muted'} style={{'font-family': 'Garamond'}}>*Title can not be\r\n                            empty</Form.Text><br/>\r\n                    </Form.Group>\r\n                    <Form.Group className={\"mb-4\"} controlId={'desc'} align={'left'} >\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as={'textarea'} rows={4}\r\n                                      onChange={event => setDesc(event.target.value)}\r\n                                      defaultValue={todo.description}\r\n\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                <Button onClick={() => updateTodoHandler(nid)}\r\n                        href={'/'} type={'submit'}  className={\" mx-2 mb-5\"} variant={'success'}\r\n                                       style={{borderRadius: '50px', }}\r\n\r\n                                       disabled={(title=== a ) && (desc === b)}\r\n\r\n                >\r\n\r\n                    Update <FaPlus style={{'padding-bottom': '3.5px'}}/>\r\n                </Button>\r\n        </Form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Update;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Update from './components/Update';\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\nReactDOM.render(\n   <React.StrictMode> <div id=\"main\" className=\"App justify-content-center align-content-center mx-auto my-auto\" style={{\"width\": \"480px\", \"backgroundColor\":\"white\"}}>\n            <br/>\n            <h1 className=\"card-body text-white bg-primary mb-4\">\n                Task Manager\n            </h1></div>\n  <Router>\n\n      <Routes>\n          <Route path=':nanoid' element={<Update/>}/>\n          <Route path='/' element={<App/>}/>\n      </Routes>\n  </Router></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}